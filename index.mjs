// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-floating-point-data-type@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-real-floating-point-data-type@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-complex-floating-point-data-type@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-integer-data-type@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-signed-integer-data-type@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-unsigned-integer-data-type@v0.1.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-real-data-type@v0.1.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-numeric-data-type@v0.1.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-data-type@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-defaults@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";var l={floating_point:[t,o.get("dtypes.floating_point")],real_floating_point:[e,o.get("dtypes.real_floating_point")],complex_floating_point:[s,o.get("dtypes.complex_floating_point")],integer:[r,o.get("dtypes.integer")],signed_integer:[i,o.get("dtypes.signed_integer")],unsigned_integer:[n,o.get("dtypes.unsigned_integer")],real:[d,o.get("dtypes.real")],numeric:[a,o.get("dtypes.numeric")]},g=o.get("dtypes.default");function j(t,e){var s;if("default"===e)return g;if("same"===e||"promoted"===e)return t;if("bool"===e)throw new Error("not implemented");if(void 0===(s=l[e])){if(p(e))return e;throw new TypeError(m("invalid argument. Second argument must be a supported data type policy. Value: `%s`.",e))}return s[0](t)?t:s[1]}export{j as default};
//# sourceMappingURL=index.mjs.map
