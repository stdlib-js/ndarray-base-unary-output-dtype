// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-floating-point-data-type@v0.2.2-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-real-floating-point-data-type@v0.2.2-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-complex-floating-point-data-type@v0.2.2-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-integer-data-type@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-signed-integer-data-type@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-unsigned-integer-data-type@v0.2.2-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-real-data-type@v0.2.2-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-numeric-data-type@v0.2.2-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-boolean-data-type@v0.1.0-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-integer-index-data-type@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-boolean-index-data-type@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-mask-index-data-type@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-data-type@v0.2.2-esm/index.mjs";import _ from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-promotion-rules@v0.3.0-esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-defaults@v0.3.0-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";var c=y.get("dtypes.default"),j=y.get("dtypes.default_index"),b=y.get("dtypes.signed_integer"),u=y.get("dtypes.unsigned_integer"),x=y.get("dtypes.real_floating_point"),h={default:function(){return c},default_index:function(){return j},same:function(e){return e},promoted:function(e){return e},accumulation:function(t){if(e(t)||"generic"===t)return t;if(r(t))return _(t,u);if(i(t))return _(t,b);return x}},v={floating_point:[e,y.get("dtypes.floating_point")],floating_point_and_generic:[k(e),y.get("dtypes.floating_point")],real_floating_point:[t,x],real_floating_point_and_generic:[k(t),x],complex_floating_point:[n,y.get("dtypes.complex_floating_point")],complex_floating_point_and_generic:[k(n),y.get("dtypes.complex_floating_point")],integer:[s,y.get("dtypes.integer")],integer_and_generic:[k(s),y.get("dtypes.integer")],signed_integer:[i,b],signed_integer_and_generic:[k(i),b],unsigned_integer:[r,u],unsigned_integer_and_generic:[k(r),u],real:[d,y.get("dtypes.real")],real_and_generic:[k(d),y.get("dtypes.real")],numeric:[a,y.get("dtypes.numeric")],numeric_and_generic:[k(a),y.get("dtypes.numeric")],boolean:[o,y.get("dtypes.boolean")],boolean_and_generic:[k(o),y.get("dtypes.boolean")],integer_index:[g,y.get("dtypes.integer_index")],integer_index_and_generic:[k(g),y.get("dtypes.integer_index")],boolean_index:[p,y.get("dtypes.boolean_index")],boolean_index_and_generic:[k(p),y.get("dtypes.boolean_index")],mask_index:[m,y.get("dtypes.mask_index")],mask_index_and_generic:[k(m),y.get("dtypes.mask_index")]};function k(e){return function(t){return"generic"===t||e(t)}}function w(e,t){var n=h[t];if(void 0!==n)return n(e);if(void 0!==(n=v[t]))return n[0](e)?e:n[1];if(l(t))return t;throw new TypeError(f("1dRDw",t))}export{w as default};
//# sourceMappingURL=index.mjs.map
